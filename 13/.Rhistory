}
plotSurface(-50, 50, 0.00000001, .003, 25, eval_log_unnormalized_posterior, F
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# graph parameters
plotSurface <- function(lowerFirst, upperFirst, lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F,...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
lp <- outer(A,B,f)
if(contour){
contour(A, B, lp)
}else{
persp(x=A, y=B, z=lp, ...)
}
}
plotSurface(-50, 50, 0.00000001, .003, 25, eval_log_unnormalized_posterior, F
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# graph parameters
plotSurface <- function(lowerFirst, upperFirst, lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
lp <- outer(A,B,f)
if(contour){
contour(A, B, lp)
}else{
persp(x=A, y=B, z=lp, ...)
}
}
plotSurface(-50, 50, 0.00000001, .003, 25, eval_log_unnormalized_posterior, F
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# graph parameters
plotSurface <- function(lowerFirst, upperFirst,
lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
lp <- outer(A,B,f)
if(contour){
contour(A, B, lp)
}else{
persp(x=A, y=B, z=lp, ...)
}
}
plotSurface(-50, 50, 0.00000001, .003, 25, eval_log_unnormalized_posterior, F
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .003, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .003, 25, eval_log_unnormalized_posterior, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .003, 250, eval_log_unnormalized_posterior, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .000003, 250, eval_log_unnormalized_posterior, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .0000003, 250, eval_log_unnormalized_posterior, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
Vis <- rep(1,length(y))
Vis
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.00000001, .3, 250, eval_log_unnormalized_posterior, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .3, 250, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- rep(10,length(y))
Vis <- rep(10,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
Vis <- rep(100,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
length(y)
# the surface generated conditions on these values of the hidden data
Vis <- (1;10) #rep(100,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- (1:10) #rep(100,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
mu <- rep(mu, length(y))
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
traceback()
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
mu <- rep(mu, length(y))
print(length(mu))
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
mu <- rep(mu, length(y))
cat(length(mu))
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
y
y - 1
mu
plotSurface(-50, 50, 0.001, 3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# data
y <- c(-0.59836613, -0.10194784, -0.06399318,  0.41957954, -0.98565345, -0.09350700,  1.75391375,  0.79859181,  0.32095243, 0.72231544)
nu <- 5
# data
y <- c(-0.59836613, -0.10194784, -0.06399318,  0.41957954,
-0.98565345, -0.09350700,  1.75391375,  0.79859181,
0.32095243, 0.72231544)
nu <- 5
# function that evaluates log posteriors
eval_log_unnormalized_posterior <- function(mu, ss){
zsquareds <- (y - mu)*(y - mu)/ss
lds <- -.5*(nu+1) * log( 1 + zsquareds/nu )
sum(lds) - log(ss)
}
# graph parameters
plotSurface <- function(lowerFirst, upperFirst,
lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
lp <- outer(A,B,f)
if(contour){
contour(A, B, lp)
}else{
persp(x=A, y=B, z=lp, ...)
}
}
plotSurface(-50, 50, 0.00000001, .0000003, 250, eval_log_unnormalized_posterior, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .0000003, 250, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- rep(100,length(y))
Vis
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
mu <- rep(mu, length(y))
cat(length(mu))
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
mu <- rep(mu, length(y))
cat(length(mu))
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.001, 3, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- rep(1,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
mu <- rep(mu, length(y))
cat(length(mu))
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.001, 3, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- rep(.0001,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
mu <- rep(mu, length(y))
cat(length(mu))
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.001, 3, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
mu <- rep(mu, length(y))
cat(length(mu))
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
cat(length(mu))
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.001, 3, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
?mapply
# graph parameters
plotSurface <- function(lowerFirst, upperFirst,
lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
args <- expand.grid(A,B)
z <- mapply(f, args[,1], args[,2])
#lp <- outer(A,B,f)
if(contour){
contour(A, B, z)
}else{
persp(x=A, y=B, z=z, ...)
}
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
?mapply
# graph parameters
plotSurface <- function(lowerFirst, upperFirst,
lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
args <- expand.grid(A,B)
z <- mapply(f, args[,1], args[,2])
cat(z)
#lp <- outer(A,B,f)
if(contour){
contour(A, B, z)
}else{
persp(x=A, y=B, z=z, ...)
}
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# graph parameters
plotSurface <- function(lowerFirst, upperFirst,
lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
args <- expand.grid(A,B)
z <- mapply(f, args[,1], args[,2])
dim(z) <- c(length(a), length(b))
#cat(z)
#lp <- outer(A,B,f)
if(contour){
contour(A, B, z)
}else{
persp(x=A, y=B, z=z, ...)
}
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# graph parameters
plotSurface <- function(lowerFirst, upperFirst,
lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
args <- expand.grid(A,B)
z <- mapply(f, args[,1], args[,2])
dim(z) <- c(length(A), length(B))
#cat(z)
#lp <- outer(A,B,f)
if(contour){
contour(A, B, z)
}else{
persp(x=A, y=B, z=z, ...)
}
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# data
y <- c(-0.59836613, -0.10194784, -0.06399318,  0.41957954,
-0.98565345, -0.09350700,  1.75391375,  0.79859181,
0.32095243, 0.72231544)
nu <- 5
# function that evaluates log posteriors
eval_log_unnormalized_posterior <- function(mu, ss){
zsquareds <- (y - mu)*(y - mu)/ss
lds <- -.5*(nu+1) * log( 1 + zsquareds/nu )
sum(lds) - log(ss)
}
# graph parameters
plotSurface <- function(lowerFirst, upperFirst,
lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
args <- expand.grid(A,B)
z <- mapply(f, args[,1], args[,2])
dim(z) <- c(length(A), length(B))
#cat(z)
#lp <- outer(A,B,f)
if(contour){
contour(A, B, z)
}else{
persp(x=A, y=B, z=z, ...)
}
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# graph parameters
plotSurface <- function(lowerFirst, upperFirst,
lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
args <- expand.grid(A,B)
z <- mapply(f, args[,1], args[,2])
dim(z) <- c(length(A), length(B))
if(contour){
contour(A, B, z)
}else{
persp(x=A, y=B, z=z, ...)
}
}
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, .3, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.00000001, 10, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.0001, 150, 25, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.0001, 500, 100, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# function that evaluates log posteriors
eval_log_unnormalized_posterior <- function(mu, ss){
zsquareds <- (y - mu)*(y - mu)/ss
lds <- .5*(nu+1) * log( 1 + zsquareds/nu )
sum(lds) - log(ss)
}
# graph parameters
plotSurface <- function(lowerFirst, upperFirst,
lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
args <- expand.grid(A,B)
z <- mapply(f, args[,1], args[,2])
dim(z) <- c(length(A), length(B))
if(contour){
contour(A, B, z)
}else{
persp(x=A, y=B, z=z, ...)
}
}
plotSurface(-50, 50, 0.0001, 500, 100, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.0001, 50, 20, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# function that evaluates log posteriors
eval_log_unnormalized_posterior <- function(mu, ss){
zsquareds <- (y - mu)*(y - mu)/ss
lds <- -.5*(nu+1) * log( 1 + zsquareds/nu )
sum(lds) - log(ss)
}
# graph parameters
plotSurface <- function(lowerFirst, upperFirst,
lowerSecond, upperSecond,
numGridPointsOnEachAxis, f, contour = F, ...){
A <- seq(lowerFirst, upperFirst, length.out = numGridPointsOnEachAxis)
B <- seq(lowerSecond, upperSecond, length.out = numGridPointsOnEachAxis)
args <- expand.grid(A,B)
z <- mapply(f, args[,1], args[,2])
dim(z) <- c(length(A), length(B))
if(contour){
contour(A, B, z)
}else{
persp(x=A, y=B, z=z, ...)
}
}
plotSurface(-50, 50, 0.0001, 50, 20, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.0001, 50, 20, eval_log_unnormalized_posterior, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.0001, 50, 20, eval_log_unnormalized_posterior, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- rep(.0001,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
cat(length(mu))
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.001, 3, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.001, 3, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.001, 30, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- rep(10,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.001, 30, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- rep(100,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.001, 30, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- rep(1000,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.001, 30, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- rep(1,length(y))
# function that evaluates log of surface
eval_log_surf <- function(mu, ss){
first <- (.5* length(y) * nu - 1)* log(ss)
second <- (.5*(nu + 1) + 1) * log(Vis)
third <- .5*((y - mu)^2 + nu*ss)/Vis
first - sum(second + third)
}
plotSurface(-50, 50, 0.001, 30, 25, eval_log_surf, F,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
plotSurface(-50, 50, 0.001, 30, 25, eval_log_surf, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
# the surface generated conditions on these values of the hidden data
Vis <- rep(10,length(y))
plotSurface(-50, 50, 0.001, 30, 25, eval_log_surf, T,
theta=-120, zlab = "log unnorm dens", xlab = "mu", ylab = "ss")
