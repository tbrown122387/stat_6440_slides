# generate a fake data set
dataSize <- 5
fakeData <- rnorm(dataSize, mean = 5.03, sd = 49.1231)
dataSampVar <- var(fakeData) # s^2
dataMean <- mean(fakeData) # ybar
# regular Monte Carlo:
# simulate from # simulate from p(ytilde, mu, ss | y)
# and take the mean
library(invgamma)
# simulate from p(ytilde, mu, ss | y) = p(ytilde | mu, ss)p(mu | ss, y)p(ss | y)
numSamps <- 10
getOneEstimator.v1 <- function(numSamps, dataMean, dataSampVar){
sigmaSquareds <- rinvgamma(n = numSamps, shape = .5*(dataSize - 1), rate = .5*(dataSize-1)*dataSampVar)
mus <- rnorm(n = numSamps, mean = dataMean, sd = sqrt(sigmaSquareds/dataSize)) # note the changing variances
ytildes <- rnorm(n = numSamps, mean = mus, sd = sqrt(sigmaSquareds/dataSize)) # changing means and variances
mean(ytildes)
}
# let's do this over and over again,
# so we can get a sense of the dispersion of this estimator
regMonteCarloEstimators <- replicate(1e5,
getOneEstimator.v1(numSamps, dataMean, dataSampVar))
# simulate from p(mu, ss | y) = p(mu | ss, y)p(ss | y)
# use the fact that E[ytilde | mu, ss] = mu
getOneEstimator.v2 <- function(numSamps, dataMean, dataSampVar){
sigmaSquareds <- rinvgamma(n = numSamps, shape = .5*(dataSize - 1), rate = .5*(dataSize-1)*dataSampVar)
mus <- rnorm(n = numSamps, mean = dataMean, sd = sqrt(sigmaSquareds/dataSize)) # note the changing variances
estimator <- mean(mus)
}
RBEstimators <- replicate(1e5, getOneEstimator.v2(numSamps, dataMean, dataSampVar))
# compare the three estimators
p1 <- hist(regMonteCarloEstimators)
p2 <- hist(RBEstimators)
plot(p1, col=rgb(0,0,1,1/4), xlim=c(-100,100),
main = "Monte Carlo: Naive versus RB",
xlab = "estimator value")  # first histogram
plot(p2, col=rgb(1,0,0,1/4), xlim=c(-100,100), add=T)  # second
# simulate from p(mu, ss | y) = p(mu | ss, y)p(ss | y)
# use the fact that E[ytilde | mu, ss] = mu
getOneEstimator.v2 <- function(numSamps, dataMean, dataSampVar){
sigmaSquareds <- rinvgamma(n = numSamps, shape = .5*(dataSize - 1), rate = .5*(dataSize-1)*dataSampVar)
mus <- rnorm(n = numSamps, mean = dataMean, sd = sqrt(sigmaSquareds/dataSize)) # note the changing variances
mean(mus)
}
RBEstimators <- replicate(1e5, getOneEstimator.v2(numSamps, dataMean, dataSampVar))
# compare the three estimators
p1 <- hist(regMonteCarloEstimators)
p2 <- hist(RBEstimators)
plot(p1, col=rgb(0,0,1,1/4), xlim=c(-100,100),
main = "Monte Carlo: Naive versus RB",
xlab = "estimator value")  # first histogram
plot(p2, col=rgb(1,0,0,1/4), xlim=c(-100,100), add=T)  # second
plot(p1, col=rgb(0,0,1,1/4), xlim=c(-100,100),
main = "Monte Carlo: Naive versus RB",
xlab = "estimator value")  # first histogram
# compare the three estimators
p1 <- hist(regMonteCarloEstimators, freq = T)
p2 <- hist(RBEstimators, freq = T)
plot(p1, col=rgb(0,0,1,1/4), xlim=c(-100,100),
main = "Monte Carlo: Naive versus RB",
xlab = "estimator value")  # first histogram
plot(p2, col=rgb(1,0,0,1/4), xlim=c(-100,100), add=T)  # second
# compare the three estimators
p1 <- hist(regMonteCarloEstimators, freq = F)
p2 <- hist(RBEstimators, freq = F)
plot(p1, col=rgb(0,0,1,1/4), xlim=c(-100,100),
main = "Monte Carlo: Naive versus RB",
xlab = "estimator value")  # first histogram
plot(p2, col=rgb(1,0,0,1/4), xlim=c(-100,100), add=T)  # second
# compare the three estimators
p1 <- hist(regMonteCarloEstimators, probability = T)
p2 <- hist(RBEstimators, probability = T)
# compare the three estimators
p1 <- hist(regMonteCarloEstimators, probability = T, plot = F)
p2 <- hist(RBEstimators, probability = T, plot = F)
# compare the three estimators
p1 <- hist(regMonteCarloEstimators, probability = T)
p2 <- hist(RBEstimators, probability = T)
plot(p1, col=rgb(0,0,1,1/4), xlim=c(-100,100),
main = "Monte Carlo: Naive versus RB",
xlab = "estimator value")  # first histogram
plot(p2, col=rgb(1,0,0,1/4), xlim=c(-100,100), add=T)  # second
abline(v=dataMean, col = "red") # actual posterior predictive mean (no sampling error)
legend(x = "topright",
legend = c("monte-carlo", "rb monte-carlo"),
fill = c(rgb(0,0,1,1/4),
rgb(1,0,0,1/4)))
